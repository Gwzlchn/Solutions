// 题目描述
// To prepare for PAT, the judge sometimes has to generate random passwords for the users.  
// The problem is that there are always some confusing passwords since it is hard to distinguish 1 
// (one) from l (L in lowercase), or 0 (zero) from O (o in uppercase).  One solution is to replace 
// 1 (one) by @, 0 (zero) by %, l by L, and O by o.  Now it is your job to write a program to check 
// the accounts generated by the judge, and to help the juge modify the confusing passwords.

// 输入描述:
// Each input file contains one test case.  Each case contains a positive integer N (<= 1000), 
// followed by N lines of accounts.  Each account consists of a user name and a password, 
// both are strings of no more than 10 characters with no space.


// 输出描述:
// For each test case, first print the number M of accounts that have been modified, then print 
// in the following M lines the modified accounts info, that is, the user names and the corresponding 
// modified passwords.  The accounts must be printed in the same order as they are read in.  If no account
//  is modified, print in one line "There are N accounts and no account is modified" where N is the total 
// number of accounts.  However, if N is one, you must print "There is 1 account and no account is modified" instead.

// 输入例子:
// 3
// Team000002 Rlsp0dfa
// Team000003 perfectpwd
// Team000001 R1spOdfa

// 输出例子:
// 2
// Team000002 RLsp%dfa
// Team000001 R@spodfa


#include<string>
#include<vector>
#include<iostream>
#include <algorithm>
using namespace std;
struct stu{
    string id;
    string pass;
    string pass_altered = "";
    bool alterd = false;
};

int altered(stu s1){
    return s1.alterd;
}


bool change_pass(stu& temp){
    int length = temp.pass.size();
    for(int i=0;i<length;i++){
        switch (temp.pass[i])
        {
        case '1':
            temp.pass[i] = '@';
            temp.alterd = true;
            break;
        case 'l':
             temp.pass[i] = 'L';
            temp.alterd = true;
            break;
         case '0':
             temp.pass[i] = '%';
            temp.alterd = true;
            break;
        case 'O':
             temp.pass[i] = 'o';
            temp.alterd = true;
            break;
        default:
            break;
        }
    }
    return temp.alterd;
}


int main(){
    int cnt,temp_cnt;
    cin>>cnt;
    temp_cnt = cnt;
    vector<stu> stu_arr;
    while(temp_cnt--){
        stu* temp = new stu;
        cin>>temp->id;
        cin>>temp->pass;
        change_pass(*temp);
        stu_arr.push_back(*temp);
    }
    int alt_cnt;
    alt_cnt = count_if(stu_arr.begin(),stu_arr.end(),altered);
    if(alt_cnt == 0){
        if(cnt==1){
            cout<<"There is 1 account and no account is modified"<<endl;
        }else{
            cout<<"There are "<<cnt<<" accounts and no account is modified"<<endl;
        }
        return 0;
    }
    cout<<alt_cnt<<endl;
    for(int i=0;i<stu_arr.size();i++){
        if(stu_arr[i].alterd){
            cout<<stu_arr[i].id<<" "<<stu_arr[i].pass<<endl;
        }
    }

    return 0;


}

